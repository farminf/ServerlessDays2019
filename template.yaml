Resources:
  mybucket160F8132:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: myStack/mybucket/Resource
  mylambdaServiceRoleACC68B68:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: myStack/mylambda/ServiceRole/Resource
  mylambdaServiceRoleDefaultPolicy8D6820A7:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:PutObject
              - s3:GetObject
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - mybucket160F8132
                      - Arn
                  - /*
        Version: "2012-10-17"
      PolicyName: mylambdaServiceRoleDefaultPolicy8D6820A7
      Roles:
        - Ref: mylambdaServiceRoleACC68B68
    Metadata:
      aws:cdk:path: myStack/mylambda/ServiceRole/DefaultPolicy/Resource
  mylambda9592E228:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: mylambdaCodeS3BucketE27B2978
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: mylambdaCodeS3VersionKey301CE0CD
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: mylambdaCodeS3VersionKey301CE0CD
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - mylambdaServiceRoleACC68B68
          - Arn
      Runtime: nodejs8.10
      Environment:
        Variables:
          BUCKET_NAME:
            Ref: mybucket160F8132
    DependsOn:
      - mylambdaServiceRoleDefaultPolicy8D6820A7
      - mylambdaServiceRoleACC68B68
    Metadata:
      aws:cdk:path: myStack/mylambda/Resource
      aws:asset:path: asset.7ecc77636deefb31954ea2e6aadf6d2c361a2943535a678d65f46a8de5e1f503
      aws:asset:property: Code
  mylambdaApiPermissionANY08CCB88A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - mylambda9592E228
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:eu-west-1:"
            - Ref: AWS::AccountId
            - ":"
            - Ref: myApi10332170
            - /
            - Ref: myApiDeploymentStageprodBF46AA96
            - /*/
    Metadata:
      aws:cdk:path: myStack/mylambda/ApiPermission.ANY..
  mylambdaApiPermissionTestANYD05A9BB4:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - mylambda9592E228
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:eu-west-1:"
            - Ref: AWS::AccountId
            - ":"
            - Ref: myApi10332170
            - /test-invoke-stage/*/
    Metadata:
      aws:cdk:path: myStack/mylambda/ApiPermission.Test.ANY..
  mylambdaApiPermissionANYproxy02CA56DB:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - mylambda9592E228
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:eu-west-1:"
            - Ref: AWS::AccountId
            - ":"
            - Ref: myApi10332170
            - /
            - Ref: myApiDeploymentStageprodBF46AA96
            - /*/{proxy+}
    Metadata:
      aws:cdk:path: myStack/mylambda/ApiPermission.ANY..{proxy+}
  mylambdaApiPermissionTestANYproxy1BC005D1:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - mylambda9592E228
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:eu-west-1:"
            - Ref: AWS::AccountId
            - ":"
            - Ref: myApi10332170
            - /test-invoke-stage/*/{proxy+}
    Metadata:
      aws:cdk:path: myStack/mylambda/ApiPermission.Test.ANY..{proxy+}
  myApi10332170:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: myApi
    Metadata:
      aws:cdk:path: myStack/myApi/Resource
  myApiDeployment12138A1E2512965819a92639c3943e3506a8a228:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: myApi10332170
      Description: Automatically created by the RestApi construct
    DependsOn:
      - myApiproxyANY5D46D965
      - myApiproxyB1F7DCCD
      - myApiANYF3D763C9
    Metadata:
      aws:cdk:path: myStack/myApi/Deployment/Resource
  myApiDeploymentStageprodBF46AA96:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: myApi10332170
      DeploymentId:
        Ref: myApiDeployment12138A1E2512965819a92639c3943e3506a8a228
      StageName: prod
    Metadata:
      aws:cdk:path: myStack/myApi/DeploymentStage.prod/Resource
  myApiCloudWatchRole870BFCF4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - apigateway.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: myStack/myApi/CloudWatchRole/Resource
  myApiAccountAF69EF0B:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - myApiCloudWatchRole870BFCF4
          - Arn
    DependsOn:
      - myApi10332170
    Metadata:
      aws:cdk:path: myStack/myApi/Account
  myApiproxyB1F7DCCD:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - myApi10332170
          - RootResourceId
      PathPart: "{proxy+}"
      RestApiId:
        Ref: myApi10332170
    Metadata:
      aws:cdk:path: myStack/myApi/Default/{proxy+}/Resource
  myApiproxyANY5D46D965:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: ANY
      ResourceId:
        Ref: myApiproxyB1F7DCCD
      RestApiId:
        Ref: myApi10332170
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:eu-west-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - mylambda9592E228
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: myStack/myApi/Default/{proxy+}/ANY/Resource
  myApiANYF3D763C9:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: ANY
      ResourceId:
        Fn::GetAtt:
          - myApi10332170
          - RootResourceId
      RestApiId:
        Ref: myApi10332170
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:eu-west-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - mylambda9592E228
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: myStack/myApi/Default/ANY/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=0.34.0,@aws-cdk/assets=0.34.0,@aws-cdk/aws-apigateway=0.34.0,@aws-cdk/aws-cloudwatch=0.34.0,@aws-cdk/aws-ec2=0.34.0,@aws-cdk/aws-events=0.34.0,@aws-cdk/aws-iam=0.34.0,@aws-cdk/aws-kms=0.34.0,@aws-cdk/aws-lambda=0.34.0,@aws-cdk/aws-s3=0.34.0,@aws-cdk/aws-sqs=0.34.0,@aws-cdk/cdk=0.34.0,@aws-cdk/cx-api=0.34.0,@aws-cdk/region-info=0.34.0,jsii-runtime=node.js/v10.13.0
Parameters:
  mylambdaCodeS3BucketE27B2978:
    Type: String
    Description: S3 bucket for asset "myStack/mylambda/Code"
  mylambdaCodeS3VersionKey301CE0CD:
    Type: String
    Description: S3 key for asset version "myStack/mylambda/Code"
  mylambdaCodeArtifactHash01DDF179:
    Type: String
    Description: Artifact hash for asset "myStack/mylambda/Code"
Outputs:
  myApiEndpointF2DFDFB1:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: myApi10332170
          - .execute-api.eu-west-1.
          - Ref: AWS::URLSuffix
          - /
          - Ref: myApiDeploymentStageprodBF46AA96
          - /

